{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n\nshinyServer(function(input, output) {\n  \n  # retrieve ui data\n  model<-reactive({input$model})\n  WaitTime<-reactive({input$WaitTime})\n  #WaitTime1<-reactive({reactiveValuesToList(WaitTime())})\n  \n  # build model and plots\n  bmodel1 <- lm(eruptions ~ waiting, data=faithful)\n  model1p <- qplot(waiting, eruptions, geom = 'point', data = faithful)+geom_smooth(method = \"lm\", se = FALSE)\n  bmodel2 <- lm(eruptions~(waiting<65)*waiting + (waiting>=65)*waiting, data=faithful)\n  model2p <- qplot(waiting, eruptions, group = waiting > 65, geom = c('point', 'smooth'), method = 'lm', se = F, data = faithful)\n  \n  reactive({\n    newdata = data.frame(waiting=WaitTime)\n    \n    if(model()==\"model1\") {\n      PredErupt1=predict(bmodel1, newdata)\n      pointForplot1=data.frame(waiting=WaitTime,eruptions=PredErupt1)\n    } else {\n      PredErupt2=predict(bmodel2, newdata)\n      pointForplot2=data.frame(waiting=WaitTime,eruptions=PredErupt2)\n    }\n  })\n  \n  # output plot\n  output$distPlot <- renderPlot({\n    \n    if (model()==\"model1\") {\n      model1p+geom_point(data = pointForplot1, colour = \"red\",size=5)\n    } else {\n      model2p+geom_point(data = pointForplot2, colour = \"red\",size=5)\n    }\n    \n  })\n  \n})",
    "created" : 1476753076397.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2390633315",
    "id" : "595D6B1B",
    "lastKnownWriteTime" : 7310312468855861093,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}